/*
 * This file is generated by jOOQ.
 */
package ehroute.identityservice.entities.db.tables.records;


import ehroute.identityservice.entities.db.tables.AccountRoles;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRolesRecord extends UpdatableRecordImpl<AccountRolesRecord> implements Record4<Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.account_roles.account_id</code>.
     */
    public AccountRolesRecord setAccountId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.account_roles.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.account_roles.role_id</code>.
     */
    public AccountRolesRecord setRoleId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.account_roles.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.account_roles.updated_on</code>.
     */
    public AccountRolesRecord setUpdatedOn(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.account_roles.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.account_roles.created_on</code>.
     */
    public AccountRolesRecord setCreatedOn(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.account_roles.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AccountRoles.ACCOUNT_ROLES.ACCOUNT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return AccountRoles.ACCOUNT_ROLES.ROLE_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return AccountRoles.ACCOUNT_ROLES.UPDATED_ON;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return AccountRoles.ACCOUNT_ROLES.CREATED_ON;
    }

    @Override
    public Integer component1() {
        return getAccountId();
    }

    @Override
    public Integer component2() {
        return getRoleId();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedOn();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedOn();
    }

    @Override
    public Integer value1() {
        return getAccountId();
    }

    @Override
    public Integer value2() {
        return getRoleId();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedOn();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedOn();
    }

    @Override
    public AccountRolesRecord value1(Integer value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AccountRolesRecord value2(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public AccountRolesRecord value3(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public AccountRolesRecord value4(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public AccountRolesRecord values(Integer value1, Integer value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRolesRecord
     */
    public AccountRolesRecord() {
        super(AccountRoles.ACCOUNT_ROLES);
    }

    /**
     * Create a detached, initialised AccountRolesRecord
     */
    public AccountRolesRecord(Integer accountId, Integer roleId, LocalDateTime updatedOn, LocalDateTime createdOn) {
        super(AccountRoles.ACCOUNT_ROLES);

        setAccountId(accountId);
        setRoleId(roleId);
        setUpdatedOn(updatedOn);
        setCreatedOn(createdOn);
    }
}
