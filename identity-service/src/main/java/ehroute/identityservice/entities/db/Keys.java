/*
 * This file is generated by jOOQ.
 */
package ehroute.identityservice.entities.db;


import ehroute.identityservice.entities.db.tables.AccountRoles;
import ehroute.identityservice.entities.db.tables.Accounts;
import ehroute.identityservice.entities.db.tables.Roles;
import ehroute.identityservice.entities.db.tables.records.AccountRolesRecord;
import ehroute.identityservice.entities.db.tables.records.AccountsRecord;
import ehroute.identityservice.entities.db.tables.records.RolesRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRolesRecord> ACCOUNT_ROLES_PKEY = Internal.createUniqueKey(AccountRoles.ACCOUNT_ROLES, DSL.name("account_roles_pkey"), new TableField[] { AccountRoles.ACCOUNT_ROLES.ACCOUNT_ID, AccountRoles.ACCOUNT_ROLES.ROLE_ID }, true);
    public static final UniqueKey<AccountsRecord> ACCOUNTS_EMAIL_KEY = Internal.createUniqueKey(Accounts.ACCOUNTS, DSL.name("accounts_email_key"), new TableField[] { Accounts.ACCOUNTS.EMAIL }, true);
    public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = Internal.createUniqueKey(Accounts.ACCOUNTS, DSL.name("accounts_pkey"), new TableField[] { Accounts.ACCOUNTS.ID }, true);
    public static final UniqueKey<RolesRecord> ROLES_NAME_KEY = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_name_key"), new TableField[] { Roles.ROLES.NAME }, true);
    public static final UniqueKey<RolesRecord> ROLES_PKEY = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_pkey"), new TableField[] { Roles.ROLES.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRolesRecord, AccountsRecord> ACCOUNT_ROLES__ACCOUNT_ROLES_ACCOUNT_ID_FKEY = Internal.createForeignKey(AccountRoles.ACCOUNT_ROLES, DSL.name("account_roles_account_id_fkey"), new TableField[] { AccountRoles.ACCOUNT_ROLES.ACCOUNT_ID }, Keys.ACCOUNTS_PKEY, new TableField[] { Accounts.ACCOUNTS.ID }, true);
    public static final ForeignKey<AccountRolesRecord, RolesRecord> ACCOUNT_ROLES__ACCOUNT_ROLES_ROLE_ID_FKEY = Internal.createForeignKey(AccountRoles.ACCOUNT_ROLES, DSL.name("account_roles_role_id_fkey"), new TableField[] { AccountRoles.ACCOUNT_ROLES.ROLE_ID }, Keys.ROLES_PKEY, new TableField[] { Roles.ROLES.ID }, true);
}
