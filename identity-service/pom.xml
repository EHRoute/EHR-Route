<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ehroute.identityservice</groupId>
	<artifactId>identity-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>identity-service</name>
	<description>EHRoute Identity Service</description>


	<parent>
		<groupId>ehrroute</groupId>
		<artifactId>ehrroute</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	
	<properties>
		<java.version>11</java.version>
		<repackage.classifier/>
		<spring-native.version>0.10.1</spring-native.version>
		<org.projectlombok.version>1.18.16</org.projectlombok.version>
		<jooq.version>3.15.0</jooq.version>
		<org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
		<org.apache.maven.plugins.version>3.8.1</org.apache.maven.plugins.version>
		<sonar.projectKey>ehroute:identity-service</sonar.projectKey>
		<sonar.organization>ehroute</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<!--suppress UnresolvedMavenProperty -->
		<app.db>${DB_NAME}</app.db>
		<app.dbuser>${DB_USER}</app.dbuser>
		<app.dbpassword>${DB_PASSWORD}</app.dbpassword>
	</properties>


	<dependencies>

		<!-- #region Spring -->

		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-native.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>

		<!-- #endregion -->


		<!-- #region DB -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>

		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- #endregion -->


		<!-- #region Security -->

		<dependency>
			<groupId>sh.ory.hydra</groupId>
			<artifactId>hydra-client</artifactId>
			<version>1.9.0</version>
		</dependency>

		<!-- #endregion -->


		<!-- #region Dev -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta-extensions-liquibase</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-maven-plugin</artifactId>
			<version>4.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-webflux-ui</artifactId>
			<version>1.4.8</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<!-- #endregion -->

	</dependencies>


	<build>
		<plugins>

			<!-- #region JOOQ Codegen -->

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<executions>
					<execution>

						<id>generate-postgre</id>
						<phase>generate-sources</phase>

						<goals>
							<goal>generate</goal>
						</goals>

						<configuration>

							<jdbc>
								<driver>org.postgresql.Driver</driver>
								<url>jdbc:postgresql://localhost:5432/${app.db}</url>
								<user>${app.dbuser}</user>
								<password>${app.dbpassword}</password>
							</jdbc>

							<generator>
							
								<database>
									<name>org.jooq.meta.extensions.liquibase.LiquibaseDatabase</name>
									<properties>

										<property>
											<key>scripts</key>
											<value>src/main/resources/db/db.changelog-master.yml</value>
										</property>

										<property>
											<key>includeLiquibaseTables</key>
											<!-- Do not include liquibase's ChangeLog tables -->
											<value>false</value>
										</property>

										<!-- Properties prefixed "database." will be passed on to the 
											liquibase.database.Database class if a matching setter is found -->
										<!--<property>
											<key>database.liquibaseSchemaName</key>
											<value>lb</value>
										</property>-->

										<property>
											<key>changeLogParameters.contexts</key>
											<value>!test</value>
										</property>

									</properties>
								</database>

								<generate>
									<pojos>false</pojos>
									<daos>false</daos>
									<pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
									<javaTimeTypes>true</javaTimeTypes>
									<fluentSetters>true</fluentSetters>
								</generate>

								<target>
									<packageName>
										com.tej.JooQDemo.jooq.sample.model
									</packageName>
									<directory>
										target/generated-sources/jooq
									</directory>
								</target>

							</generator>

						</configuration>

					</execution>
				</executions>
			</plugin>

			<!-- #endregion -->

			<!-- #region Liquibase -->

			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>4.1.1</version>
				<configuration>
					<propertyFile>src/main/resources/liquibase.yml</propertyFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-core</artifactId>
						<version>5.4.6.Final</version>
					</dependency>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.4.0-b180830.0359</version>
					</dependency>
              </dependencies>
			</plugin>

			<!-- #endregion -->

			<!-- #region Spring Maven -->

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
					<classifier>${repackage.classifier}</classifier>
					<image>
						<builder>paketobuildpacks/builder:tiny</builder>
						<env>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
						</env>
					</image>
					<layers>
						<enabled>true</enabled>
					</layers>
				</configuration>
			</plugin>

			<!-- #endregion -->

			<!-- #region Maven Compiler -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${org.apache.maven.plugins.version}</version>
				<configuration>
					<release>11</release>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${org.projectlombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.1.0</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- #endregion -->

			<!-- #region Spring AOT -->

			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-native.version}</version>
				<executions>
					<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- #endregion -->

			<!-- #region Sonar Cloud -->

			<!--<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.3.0.603</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>running-sonar</id>
						<goals>
							<goal>sonar</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
			</plugin>-->

			<!-- #endregion -->

		</plugins>
	</build>


	<repositories>

		<repository>
			<id>central</id>
			<name>bintray</name>
			<url>https://jcenter.bintray.com</url>
		</repository>

		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>

	</repositories>


	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


	<profiles>
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<native-buildtools.version>0.9.1</native-buildtools.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.graalvm.buildtools</groupId>
					<artifactId>junit-platform-native</artifactId>
					<version>${native-buildtools.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-buildtools.version}</version>
						<executions>
							<execution>
								<id>test-native</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
